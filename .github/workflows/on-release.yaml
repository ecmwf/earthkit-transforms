name: on-release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy from"
        required: true
        default: "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  combine-environments:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref }}
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Install conda-merge
      run: python -m pip install conda-merge
    - name: Combine environments
      run: conda-merge ci/environment-ci.yml environment.yml > ci/combined-environment.yml
    - uses: actions/upload-artifact@v4
      with:
        name: combined-environments
        path: ci/combined-environment.yml

  docs-build:
    needs: [combine-environments]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref }}
    - uses: actions/download-artifact@v4
      with:
        name: combined-environments
        path: ci
    - name: Get current date
      id: date
      run: echo "date=$(date +%Y-%m-%d)" >> "${GITHUB_OUTPUT}"
    - uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: ci/combined-environment.yml
        environment-name: DEVELOP
        cache-environment: true
        cache-environment-key: environment-${{ steps.date.outputs.date }}
        cache-downloads-key: downloads-${{ steps.date.outputs.date }}
        create-args: >-
          python=3.11
    - name: Install package
      run: python -m pip install --no-deps -e .
    - name: Build documentation
      run: make docs-build
    - name: Upload documentation artifact
      uses: actions/upload-pages-artifact@v3
      with:
        name: html-docs
        path: docs/_build/html
  docs-preview:
    runs-on: ubuntu-latest
    needs: docs-build
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    steps:
      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: html-docs
          path: docs/_build/html

      - name: List downloaded files (debug)
        run: ls -R docs/_build/html

      - name: Deploy docs preview
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
          publish_branch: gh-pages-preview
          destination_dir: ${{ github.event.inputs.branch || github.ref_name }}
          commit_message: "Docs preview: ${{ github.event.inputs.branch || github.ref_name }}"

      - name: Add preview URL to summary
        run: |
          BRANCH="${{ github.event.inputs.branch || github.ref_name }}"
          PREVIEW_URL="https://ecmwf.github.io/earthkit-transforms/${BRANCH}/"
          echo "### ðŸš€ Docs Preview" >> $GITHUB_STEP_SUMMARY
          echo "[View preview here](${PREVIEW_URL})" >> $GITHUB_STEP_SUMMARY
  docs-deploy:
    if: github.event_name == 'release'
    needs: docs-build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  distribution:
    runs-on: ubuntu-latest
    needs: [combine-environments]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0   # fetch full history so setuptools-scm can find tags
        ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref }}
    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
    - name: Build distributions
      env:
        SETUPTOOLS_SCM_LOCAL_SCHEME: no-local-version
      run: |
        python -m build
    - name: Check distribution
      run: |
        python -m pip install --force-reinstall dist/*.whl
        python -m pip install twine
        twine check dist/*

    # Publish to TestPyPI when run manually
    - name: Publish to TestPyPI
      if: github.event_name == 'workflow_dispatch'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TEST_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        verbose: true

    # Publish to PyPI on release
    - name: Publish to PyPI
      if: github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
